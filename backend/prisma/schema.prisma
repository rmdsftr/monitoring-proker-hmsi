generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model anggota {
  no_hima    String     @unique(map: "unique_no_hima") @db.VarChar(100)
  nama       String     @db.VarChar(255)
  nim        String     @unique @db.VarChar(50)
  sandi      String     @db.VarChar(255)
  role       String?    @default("anggota") @db.VarChar(50)
  foto       String?
  birthdate  DateTime?  @db.Date
  birthplace String?    @db.VarChar(255)
  alamat     String?
  nohp       String?    @db.VarChar(50)
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
  panggilan  String?    @db.VarChar(100)
  id_anggota String     @id @db.VarChar(255)
  pengurus   pengurus[]
}

model detail_divisi {
  id_divisi  String   @db.VarChar(100)
  id_periode String   @db.VarChar(100)
  foto       String?
  deskripsi  String?
  visi       String?
  misi       String[]
  divisi     divisi   @relation(fields: [id_divisi], references: [id_divisi], onDelete: Cascade, onUpdate: NoAction)
  periode    periode  @relation(fields: [id_periode], references: [id_periode], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_divisi, id_periode])
}

model divisi {
  id_divisi     String          @id @db.VarChar(100)
  divisi        String          @db.VarChar(255)
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?       @default(now()) @db.Timestamptz(6)
  is_inti       Boolean?
  detail_divisi detail_divisi[]
  pengurus      pengurus[]
}

model jabatan {
  id_jabatan String     @id @db.VarChar(100)
  jabatan    String     @db.VarChar(255)
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
  pengurus   pengurus[]
}

model pengurus {
  id_periode String   @db.VarChar(100)
  id_jabatan String?  @db.VarChar(100)
  id_divisi  String?  @db.VarChar(100)
  id_anggota String   @db.VarChar(255)
  anggota    anggota  @relation(fields: [id_anggota], references: [id_anggota], onDelete: NoAction, onUpdate: NoAction)
  divisi     divisi?  @relation(fields: [id_divisi], references: [id_divisi], onDelete: NoAction, onUpdate: NoAction)
  jabatan    jabatan? @relation(fields: [id_jabatan], references: [id_jabatan], onDelete: NoAction, onUpdate: NoAction)
  periode    periode  @relation(fields: [id_periode], references: [id_periode], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_anggota, id_periode])
}

model periode {
  id_periode     String          @id @db.VarChar(100)
  start_year     String?         @db.VarChar(10)
  end_year       String?         @db.VarChar(10)
  status_periode String?         @db.VarChar(100)
  created_at     DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?       @default(now()) @db.Timestamptz(6)
  background     String?
  token_transisi String?         @unique(map: "unique_token_transisi") @db.VarChar(255)
  detail_divisi  detail_divisi[]
  pengurus       pengurus[]
}
